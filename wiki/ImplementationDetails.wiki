#summary Explains the inner workings of the Wesabe budgeting workbook.

= Introduction =

If you are comfortable with Excel or Visual Basic for Applications (VBA) you should feel welcome to tweak the workbook to make it work well for you. Here is some information about how the workbook functions to get you started.

= Download and Calculations =

The !DownloadTransactionsFromWesabe macro (Ctrl+Shift+D) refreshes a [http://office.microsoft.com/en-us/excel/HA010450851033.aspx web query] on the Transactions worksheet, and creates range names to help the calculations run faster.

The Weekly Spending and Monthly Spending sheets are the ones doing most of the work. They use [http://office.microsoft.com/en-us/excel/HA010872901033.aspx array formulas] that operate on the data from the Transactions sheet. Array formulas can be a bit slow on large blocks of data, so rather than operating on all of the downloaded transaction data, they use range names for each month and week. This greatly reduces the amount of data Excel needs to look at when computing each cell. The Microsoft article, "[http://support.microsoft.com/kb/275165 When to use a SUM(IF()) array formula]," describes a technique similar to what these array formulas do. By using array formulas in this way, each row is independent of the others. You can change the order of the dates from increasing to decreasing, you could even put arbitrary dates next to each other.

Originally I planned on using MSXML to download transactions.csv, but abandoned that implementation. Excel handles transactions.xml very well and transactions.csv doesn't include any information about splits.

Rather than hard coding the Transactions sheet name into the calculations and macros, I defined a name called !TransactionsSheetName. Originally, I had the transactions data in a separate workbook and having that name parameterized made it easier to move things around.

= Data Format =

The web query on the Transactions worksheet, was created with Excel 2002. Excel 2003 added support for XML maps, which imports XML data with a different shape. If you delete the web query and recreate it with a recent version of Excel, the macro that defines the range names probably won't work.

= Other Macros =

If you want to save a clean copy of the sheet you can run the !ClearWesabeTransactionsData macro to delete your transactions data. The !ClearWesabeTransactionsXmlRangeNames macro will remove all of the range names generated by the download process. The !RedefineWesabeTransactionsXmlRangeNames macro will create range names using the data that is currently in the Transactions worksheet, but it will not refresh the web query.

= Contributions =

If you would like to contribute an improvement to the project, please email me at my Gmail address.